Imports System

Namespace org.omg.PortableServer


	''' <summary>
	''' org/omg/PortableServer/_ServantActivatorStub.java .
	''' Generated by the IDL-to-Java compiler (portable), version "3.2"
	''' from d:/re/puppet/workspace/8-2-build-windows-amd64-cygwin/jdk8u73/6086/corba/src/share/classes/org/omg/PortableServer/poa.idl
	''' Friday, January 29, 2016 5:40:18 PM PST
	''' </summary>


	''' <summary>
	''' When the POA has the RETAIN policy it uses servant 
	''' managers that are ServantActivators. 
	''' </summary>
	Public Class _ServantActivatorStub
		Inherits org.omg.CORBA.portable.ObjectImpl
		Implements org.omg.PortableServer.ServantActivator

	  Public Shared ReadOnly _opsClass As Type = GetType(ServantActivatorOperations)



	  ''' <summary>
	  ''' This operation is invoked by the POA whenever the 
	  ''' POA receives a request for an object that is not 
	  ''' currently active, assuming the POA has the 
	  ''' USE_SERVANT_MANAGER and RETAIN policies. </summary>
	  ''' <param name="oid"> object Id associated with the object on 
	  '''            the request was made. </param>
	  ''' <param name="adapter"> object reference for the POA in which
	  '''                the object is being activated. </param>
	  ''' <returns> Servant corresponding to oid is created or 
	  '''         located by the user supplied servant manager. </returns>
	  ''' <exception cref="ForwardRequest"> to indicate to the ORB 
	  '''            that it is responsible for delivering 
	  '''            the current request and subsequent 
	  '''            requests to the object denoted in the 
	  '''            forward_reference member of the exception. </exception>
	  Public Overridable Function incarnate(ByVal oid As SByte(), ByVal adapter As org.omg.PortableServer.POA) As org.omg.PortableServer.Servant
		  Dim $so As org.omg.CORBA.portable.ServantObject = _servant_preinvoke("incarnate", _opsClass)
		  Dim $self As ServantActivatorOperations = CType($so.servant, ServantActivatorOperations)

		  Try
			 Return $self.incarnate(oid, adapter)
		  Finally
			  _servant_postinvoke($so)
		  End Try
	  End Function ' incarnate


	  ''' <summary>
	  ''' This operation is invoked whenever a servant for 
	  ''' an object is deactivated, assuming the POA has 
	  ''' the USE_SERVANT_MANAGER and RETAIN policies. </summary>
	  ''' <param name="oid"> object Id associated with the object 
	  '''            being deactivated. </param>
	  ''' <param name="adapter"> object reference for the POA in which
	  '''                the object was active. </param>
	  ''' <param name="serv"> contains reference to the servant
	  '''        associated with the object being deactivated. </param>
	  ''' <param name="cleanup_in_progress"> if TRUE indicates that
	  '''        destroy or deactivate is called with 
	  '''        etherealize_objects param of TRUE.  FALSE
	  '''        indicates that etherealize was called due to
	  '''        other reasons. </param>
	  ''' <param name="remaining_activations"> indicates whether the
	  '''        Servant Manager can destroy a servant.  If
	  '''        set to TRUE, the Servant Manager should wait
	  '''        until all invocations in progress have
	  '''        completed. </param>
	  Public Overridable Sub etherealize(ByVal oid As SByte(), ByVal adapter As org.omg.PortableServer.POA, ByVal serv As org.omg.PortableServer.Servant, ByVal cleanup_in_progress As Boolean, ByVal remaining_activations As Boolean)
		  Dim $so As org.omg.CORBA.portable.ServantObject = _servant_preinvoke("etherealize", _opsClass)
		  Dim $self As ServantActivatorOperations = CType($so.servant, ServantActivatorOperations)

		  Try
			 $self.etherealize(oid, adapter, serv, cleanup_in_progress, remaining_activations)
		  Finally
			  _servant_postinvoke($so)
		  End Try
	  End Sub ' etherealize

	  ' Type-specific CORBA::Object operations
	  Private Shared __ids As String() = { "IDL:omg.org/PortableServer/ServantActivator:2.3", "IDL:omg.org/PortableServer/ServantManager:1.0"}

	  Public Overrides Function _ids() As String()
		Return CType(__ids.clone(), String())
	  End Function

	  Private Sub readObject(ByVal s As java.io.ObjectInputStream)
		 Dim str As String = s.readUTF()
		 Dim args As String() = Nothing
		 Dim props As java.util.Properties = Nothing
		 Dim orb As org.omg.CORBA.ORB = org.omg.CORBA.ORB.init(args, props)
	   Try
		 Dim obj As org.omg.CORBA.Object = orb.string_to_object(str)
		 Dim [delegate] As org.omg.CORBA.portable.Delegate = CType(obj, org.omg.CORBA.portable.ObjectImpl)._get_delegate()
		 _set_delegate([delegate])
	   Finally
		 orb.destroy()
	   End Try
	  End Sub

	  Private Sub writeObject(ByVal s As java.io.ObjectOutputStream)
		 Dim args As String() = Nothing
		 Dim props As java.util.Properties = Nothing
		 Dim orb As org.omg.CORBA.ORB = org.omg.CORBA.ORB.init(args, props)
	   Try
		 Dim str As String = orb.object_to_string(Me)
		 s.writeUTF(str)
	   Finally
		 orb.destroy()
	   End Try
	  End Sub
	End Class ' class _ServantActivatorStub

End Namespace