Namespace org.omg.PortableServer


	''' <summary>
	''' org/omg/PortableServer/POAOperations.java .
	''' Generated by the IDL-to-Java compiler (portable), version "3.2"
	''' from d:/re/puppet/workspace/8-2-build-windows-amd64-cygwin/jdk8u73/6086/corba/src/share/classes/org/omg/PortableServer/poa.idl
	''' Friday, January 29, 2016 5:40:18 PM PST
	''' </summary>


	''' <summary>
	''' A POA object manages the implementation of a 
	''' collection of objects. The POA supports a name space 
	''' for the objects, which are identified by Object Ids. 
	''' A POA also provides a name space for POAs. A POA is 
	''' created as a child of an existing POA, which forms a 
	''' hierarchy starting with the root POA. A POA object 
	''' must not be exported to other processes, or 
	''' externalized with ORB::object_to_string.
	''' </summary>
	Public Interface POAOperations

	  ''' <summary>
	  ''' This operation creates a new POA as a child of the 
	  ''' target POA. </summary>
	  ''' <param name="adapter_name"> identifies the new POA with 
	  '''        respect to other POAs with the same parent POA. </param>
	  ''' <param name="a_POAManager"> specifies the POA Manager to be
	  '''        associated with the new POA. </param>
	  ''' <param name="policies"> specifies policy objects to be 
	  '''        associated with the POA to control its behavior. </param>
	  ''' <exception cref="AdapterAlreadyExists"> specifies that the
	  '''            target POA already has a child POA with 
	  '''            the specified name. </exception>
	  ''' <exception cref="InvalidPolicy"> is raised if any of the
	  '''            policy objects are not valid for the ORB,
	  '''            or are in conflict, or require an 
	  '''            administrative action that has not been
	  '''            performed. </exception>
	  Function create_POA(ByVal adapter_name As String, ByVal a_POAManager As org.omg.PortableServer.POAManager, ByVal policies As org.omg.CORBA.Policy()) As org.omg.PortableServer.POA

	  ''' <summary>
	  ''' If the target POA is the parent of a child POA with 
	  ''' the specified name (relative to the target POA), that 
	  ''' child POA is returned. </summary>
	  ''' <param name="adapter_name"> POA name to be found. </param>
	  ''' <param name="activate_it">  if a POA with the specified 
	  '''        name does not exist and the value of 
	  '''        the activate_it parameter is TRUE, the target 
	  '''        POA's AdapterActivator, if one exists, 
	  '''        is invoked. </param>
	  ''' <returns> POA if one exists or is activated by the
	  '''         AdapterActivator. </returns>
	  ''' <returns> AdapterNonExistent is raised if POA with
	  '''         a specified name cannot be found or
	  '''         activated using AdapaterActivator. </returns>
	  Function find_POA(ByVal adapter_name As String, ByVal activate_it As Boolean) As org.omg.PortableServer.POA

	  ''' <summary>
	  ''' This operation destroys the POA and all descendant 
	  ''' POAs. All descendant POAs are destroyed (recursively) 
	  ''' before the destruction of the containing POA. The POA 
	  ''' so destroyed (that is, the POA with its name) may be 
	  ''' re-created later in the same process. </summary>
	  ''' <param name="etherealize_objects"> flag to indicate whether
	  '''        etherealize operation on servant manager needs
	  '''        to be called. </param>
	  ''' <param name="wait_for_completion"> flag to indicate whether
	  '''        POA and its children need to wait for active
	  '''        requests and the etherealization to complete.
	  '''  </param>
	  Sub destroy(ByVal etherealize_objects As Boolean, ByVal wait_for_completion As Boolean)

	  ''' <summary>
	  ''' These operations each return a reference to a policy 
	  ''' object with the specified value. </summary>
	  ''' <param name="value"> policy type </param>
	  ''' <returns> ThreadPolcy Object </returns>
	  Function create_thread_policy(ByVal value As org.omg.PortableServer.ThreadPolicyValue) As org.omg.PortableServer.ThreadPolicy

	  ''' <summary>
	  ''' These operations each return a reference to a policy 
	  ''' object with the specified value. </summary>
	  ''' <param name="value"> policy type </param>
	  ''' <returns> LifespanPolicy Object. </returns>
	  Function create_lifespan_policy(ByVal value As org.omg.PortableServer.LifespanPolicyValue) As org.omg.PortableServer.LifespanPolicy

	  ''' <summary>
	  ''' These operations each return a reference to a policy 
	  ''' object with the specified value. </summary>
	  ''' <param name="value"> policy type </param>
	  ''' <returns> IdUniquenessPolicy Object. </returns>
	  Function create_id_uniqueness_policy(ByVal value As org.omg.PortableServer.IdUniquenessPolicyValue) As org.omg.PortableServer.IdUniquenessPolicy

	  ''' <summary>
	  ''' These operations each return a reference to a policy 
	  ''' object with the specified value. </summary>
	  ''' <param name="value"> policy type </param>
	  ''' <returns> IdAssignmentPolicy Object. </returns>
	  Function create_id_assignment_policy(ByVal value As org.omg.PortableServer.IdAssignmentPolicyValue) As org.omg.PortableServer.IdAssignmentPolicy

	  ''' <summary>
	  ''' These operations each return a reference to a policy 
	  ''' object with the specified value. </summary>
	  ''' <param name="value"> policy type </param>
	  ''' <returns> ImplicitActivationPolicy Object. </returns>
	  Function create_implicit_activation_policy(ByVal value As org.omg.PortableServer.ImplicitActivationPolicyValue) As org.omg.PortableServer.ImplicitActivationPolicy

	  ''' <summary>
	  ''' These operations each return a reference to a policy 
	  ''' object with the specified value. </summary>
	  ''' <param name="value"> policy type </param>
	  ''' <returns> ServantRetentionPolicy Object. </returns>
	  Function create_servant_retention_policy(ByVal value As org.omg.PortableServer.ServantRetentionPolicyValue) As org.omg.PortableServer.ServantRetentionPolicy

	  ''' <summary>
	  ''' These operations each return a reference to a policy 
	  ''' object with the specified value. </summary>
	  ''' <param name="value"> policy type </param>
	  ''' <returns> RequestProcessingPolicy Object. </returns>
	  Function create_request_processing_policy(ByVal value As org.omg.PortableServer.RequestProcessingPolicyValue) As org.omg.PortableServer.RequestProcessingPolicy

	  ''' <summary>
	  ''' This attribute identifies the POA relative to its 
	  ''' parent. This name is assigned when the POA is created.
	  ''' </summary>
	  Function the_name() As String

	  ''' <summary>
	  ''' This attribute identifies the parent of the POA. 
	  ''' The parent of the root POA is null. 
	  ''' </summary>
	  Function the_parent() As org.omg.PortableServer.POA

	  ''' <summary>
	  ''' This attribute identifies the current set of all 
	  ''' child POAs of the POA. The set of child POAs 
	  ''' includes only the POA's immediate children, and 
	  ''' not their descendants.
	  ''' </summary>
	  Function the_children() As org.omg.PortableServer.POA()

	  ''' <summary>
	  ''' This attribute identifies the POA manager 
	  ''' associated with the POA.
	  ''' </summary>
	  Function the_POAManager() As org.omg.PortableServer.POAManager

	  ''' <summary>
	  ''' This attribute identifies the adapter activator 
	  ''' associated with the POA.
	  ''' </summary>
	  Function the_activator() As org.omg.PortableServer.AdapterActivator

	  ''' <summary>
	  ''' This attribute identifies the adapter activator 
	  ''' associated with the POA.
	  ''' </summary>
	  Sub the_activator(ByVal newThe_activator As org.omg.PortableServer.AdapterActivator)

	  ''' 
	  ''' <summary>
	  ''' If the ServantRetentionPolicy of the POA is RETAIN, 
	  ''' then the ServantManager argument (imgr) shall support 
	  ''' the ServantActivator interface. For a NON_RETAIN policy,
	  ''' the ServantManager shall support the ServantLocator 
	  ''' interface. If the argument is nil, or does not support 
	  ''' the required interface, then the OBJ_ADAPTER 
	  ''' exception is raised. </summary>
	  ''' <returns> ServantManager associated with a POA or null if
	  '''         none exists. </returns>
	  ''' <exception cref="WrongPolicy"> raised if the 
	  '''            USE_SERVANT_MANAGER policy is not specified. </exception>
	  Function get_servant_manager() As org.omg.PortableServer.ServantManager

	  ''' 
	  ''' <summary>
	  ''' This operation sets the default servant manager 
	  ''' associated with the POA. This operation may only be 
	  ''' invoked once after a POA has been created. Attempting 
	  ''' to set the servant manager after one has already 
	  ''' been set will result in the BAD_INV_ORDER exception 
	  ''' being raised. </summary>
	  ''' <param name="imgr"> servant manager to be used as a default. </param>
	  ''' <exception cref="WrongPolicy"> raised if the 
	  '''            USE_SERVANT_MANAGER policy is not specified. </exception>
	  Sub set_servant_manager(ByVal imgr As org.omg.PortableServer.ServantManager)

	  ''' <summary>
	  ''' This operation returns the default servant associated 
	  ''' with the POA. </summary>
	  ''' <returns> p_servant default servant associated with a POA. </returns>
	  ''' <exception cref="NoServant"> raised if no default servant is
	  '''            associated with the POA. </exception>
	  ''' <exception cref="WrongPolicy"> raised if the 
	  '''            USE_DEFAULT_SERVANT policy is not specified. </exception>
	  Function get_servant() As org.omg.PortableServer.Servant

	  ''' 
	  ''' <summary>
	  ''' This operation registers the specified servant with 
	  ''' the POA as the default servant. This servant will 
	  ''' be used for all requests for which no servant is 
	  ''' found in the Active Object Map. </summary>
	  ''' <param name="p_servant"> servant to be used as a default. </param>
	  ''' <exception cref="WrongPolicy"> raised if the 
	  '''            USE_DEFAULT_SERVANT policy is not specified. </exception>
	  Sub set_servant(ByVal p_servant As org.omg.PortableServer.Servant)

	  ''' 
	  ''' <summary>
	  ''' This operation generates an Object Id and enters 
	  ''' the Object Id and the specified servant in the 
	  ''' Active Object Map. </summary>
	  ''' <param name="p_servant"> servant to be associated with an
	  '''            object to be activated. </param>
	  ''' <returns> POA generated object id. </returns>
	  ''' <exception cref="ServantAlreadyActive"> is raised if the
	  '''            POA has UNIQUE_ID policy and servant is
	  '''            is already in the Active Object Map. </exception>
	  ''' <exception cref="WrongPolicy"> raised if the SYSTEM_ID and 
	  '''            RETAIN policies are not specified. </exception>
	  Function activate_object(ByVal p_servant As org.omg.PortableServer.Servant) As SByte()

	  ''' <summary>
	  ''' This operation enters an association between the 
	  ''' specified Object Id and the specified servant in the 
	  ''' Active Object Map. </summary>
	  ''' <param name="id"> object id for the object to be activated. </param>
	  ''' <param name="p_servant"> servant to be associated with the
	  '''                  object. </param>
	  ''' <exception cref="ServantAlreadyActive"> raised if the POA 
	  '''            has the UNIQUE_ID policy and the servant 
	  '''            is already in the Active Object Map. </exception>
	  ''' <exception cref="ObjectAlreadyActive"> raised if the object is
	  '''            already active in the POA. </exception>
	  ''' <exception cref="WrongPolicy"> raised if the RETAIN policy is
	  '''            is not specified. </exception>
	  Sub activate_object_with_id(ByVal id As SByte(), ByVal p_servant As org.omg.PortableServer.Servant)

	  ''' 
	  ''' <summary>
	  ''' This operation causes the ObjectId specified in the 
	  ''' oid parameter to be deactivated. An ObjectId which 
	  ''' has been deactivated continues to process requests 
	  ''' until there are no active requests for that ObjectId. 
	  ''' A deactivated ObjectId is removed from the Active 
	  ''' Object Map when all requests executing for that 
	  ''' ObjectId have completed. </summary>
	  ''' <param name="oid"> Object Id for the object to be deactivated. </param>
	  ''' <exception cref="ObjectNotActive"> if the object with the
	  '''            specified oid is not in the Active Object
	  '''            Map. </exception>
	  ''' <exception cref="WrongPolicy"> raised if the RETAIN policy is
	  '''            is not specified. </exception>
	  Sub deactivate_object(ByVal oid As SByte())

	  ''' <summary>
	  ''' This operation creates an object reference that 
	  ''' encapsulates a POA-generated Object Id value and 
	  ''' the specified interface repository id. 
	  ''' </summary>
	  ''' <param name="intf"> rep id for creating an object reference. </param>
	  ''' <returns> object reference created using intf. </returns>
	  ''' <exception cref="WrongPolicy"> if SYSTEM_ID policy is not 
	  '''            specified. </exception>
	  Function create_reference(ByVal intf As String) As org.omg.CORBA.Object

	  ''' <summary>
	  ''' This operation creates an object reference that 
	  ''' encapsulates the specified Object Id and interface 
	  ''' repository Id values. It does not cause an activation 
	  ''' to take place. The resulting reference may be passed 
	  ''' to clients, so that subsequent requests on those 
	  ''' references will cause the object to be activated 
	  ''' if necessary, or the default servant used, depending 
	  ''' on the applicable policies. </summary>
	  ''' <param name="oid"> object id for creating an objref </param>
	  ''' <param name="intf"> rep id for creating an objref </param>
	  ''' <returns> object reference created using oid and intf </returns>
	  ''' <exception cref="BAD_PARAM"> is raised if the POA has the 
	  '''             SYSTEM_ID policy and it detects that the 
	  '''             Object Id value was not generated by the 
	  '''             system or for this POA. </exception>
	  Function create_reference_with_id(ByVal oid As SByte(), ByVal intf As String) As org.omg.CORBA.Object

	  ''' <summary>
	  ''' This operation has four possible behaviors. 
	  ''' 1. If the POA has the UNIQUE_ID policy and the 
	  ''' specified servant is active, the Object Id associated 
	  ''' with that servant is returned.
	  ''' 2. If the POA has the IMPLICIT_ACTIVATION policy and 
	  ''' either the POA has the MULTIPLE_ID policy or the 
	  ''' specified servant is not active, the servant is 
	  ''' activated using a POA-generated Object Id and the 
	  ''' Interface Id associated with the servant, and that 
	  ''' Object Id is returned. 
	  ''' 3. If the POA has the USE_DEFAULT_SERVANT policy, 
	  ''' the servant specified is the default servant, and the 
	  ''' operation is being invoked in the context of executing 
	  ''' a request on the default servant, then the ObjectId 
	  ''' associated with the current invocation is returned. 
	  ''' 4. Otherwise, the ServantNotActive exception is raised.
	  ''' </summary>
	  ''' <param name="p_servant"> servant for which the object disi returned. </param>
	  ''' <returns> object id associated with the servant. </returns>
	  ''' <exception cref="ServantNotActive"> if the above rules and
	  '''            policy combination is not met. </exception>
	  ''' <exception cref="WrongPolicy"> if the USE_DEFAULT_SERVANT policy
	  '''            or a combination of the RETAIN policy and 
	  '''            either the UNIQUE_ID or IMPLICIT_ACTIVATION 
	  '''            policies are not present.  </exception>
	  Function servant_to_id(ByVal p_servant As org.omg.PortableServer.Servant) As SByte()

	  ''' <summary>
	  ''' This operation requires the RETAIN policy and either 
	  ''' the UNIQUE_ID or IMPLICIT_ACTIVATION policies if 
	  ''' invoked outside the context of an operation dispatched 
	  ''' by this POA. It has four possible behaviors.
	  ''' 1. If the POA has both the RETAIN and the 
	  ''' UNIQUE_ID policy and the specified servant is active, 
	  ''' an object reference encapsulating the information used 
	  ''' to activate the servant is returned. 
	  ''' 2. If the POA has both the RETAIN and the 
	  ''' IMPLICIT_ACTIVATION policy and either the POA has the 
	  ''' MULTIPLE_ID policy or the specified servant is not 
	  ''' active, the servant is activated using a POA-generated 
	  ''' Object Id and the Interface Id associated with the 
	  ''' servant, and a corresponding object reference is 
	  ''' returned. 
	  ''' 3. If the operation was invoked in the context of 
	  ''' executing a request on the specified servant, the 
	  ''' reference associated with the current invocation 
	  ''' is returned. 
	  ''' 4. Otherwise, the ServantNotActive exception is raised.
	  ''' </summary>
	  ''' <param name="p_servant"> servant for which the object reference
	  '''                  needs to be obtained. </param>
	  ''' <returns> object reference associated with the servant. </returns>
	  ''' <exception cref="WrongPolicy"> if the operation is not invoked 
	  '''            in the context of executing a request on 
	  '''            the specified servant and the required 
	  '''            policies are not present. </exception>
	  ''' <exception cref="ServantNotActive"> if the above specified
	  '''            policies and rules are not met. </exception>
	  Function servant_to_reference(ByVal p_servant As org.omg.PortableServer.Servant) As org.omg.CORBA.Object

	  ''' <summary>
	  ''' If the POA has the RETAIN policy and the specified 
	  ''' object is present in the Active Object Map, this 
	  ''' operation returns the servant associated with that 
	  ''' object in the Active Object Map. Otherwise, if the 
	  ''' POA has the USE_DEFAULT_SERVANT policy and a default 
	  ''' servant has been registered with the POA, this 
	  ''' operation returns the default servant. If the object 
	  ''' reference was not created by this POA, 
	  ''' the WrongAdapter exception is raised. (OMG Issue
	  ''' on inconsistency with the POA.IDL.
	  ''' </summary>
	  ''' <param name="reference"> object reference for which the
	  '''                  servant is returned. </param>
	  ''' <returns> servant associated with the reference. </returns>
	  ''' <exception cref="WrongPolicy"> if neither the RETAIN policy or 
	  '''            the USE_DEFAULT_SERVANT policy is present. </exception>
	  ''' <exception cref="ObjectNotActive"> if the servant is not
	  '''            present in the Active Object Map (for RETAIN)
	  '''            or no default servant is registered (for
	  '''            USE_DEFAULT_POLICY). </exception>
	  ''' <exception cref="WrongAdapter"> if reference was not created by
	  '''	      this POA instance. </exception>
	  Function reference_to_servant(ByVal reference As org.omg.CORBA.Object) As org.omg.PortableServer.Servant

	  ''' <summary>
	  ''' This operation returns the Object Id value 
	  ''' encapsulated by the specified reference. This 
	  ''' operation is valid only if the reference was created 
	  ''' by the POA on which the operation is being performed. 
	  ''' The object denoted by the reference does not have 
	  ''' to be active for this operation to succeed.
	  ''' </summary>
	  ''' <param name="reference"> the object reference from which the
	  '''                  object id needs to be returned. </param>
	  ''' <returns> object id encapsulated in the reference. </returns>
	  ''' <exception cref="WrongAdapter"> if the reference was not 
	  '''            created by the POA specified in the 
	  '''            reference. </exception>
	  ''' <exception cref="WrongPolicy"> declared to allow future 
	  '''            extensions. 
	  '''  </exception>
	  Function reference_to_id(ByVal reference As org.omg.CORBA.Object) As SByte()

	  ''' <summary>
	  ''' If the POA has the RETAIN policy and the specified 
	  ''' ObjectId is in the Active Object Map, this operation 
	  ''' returns the servant associated with that object in 
	  ''' the Active Object Map. Otherwise, if the POA has 
	  ''' the USE_DEFAULT_SERVANT policy and a default servant 
	  ''' has been registered with the POA, this operation 
	  ''' returns the default servant. 
	  ''' </summary>
	  ''' <param name="oid"> object id for the which the servant is
	  '''            returned. </param>
	  ''' <returns> servant associated with oid. </returns>
	  ''' <exception cref="ObjectNotActive"> is raised if ObjectId is
	  '''            is not in the Active Object Map (for RETAIN
	  '''            policy), or no default servant is registered
	  '''            (for USE_DEFAULT_SERVANT policy).
	  ''' </exception>
	  ''' <exception cref="WrongPolicy"> is raised if the RETAIN policy
	  '''                        or the USE_DEFAULT_SERVANT 
	  '''                        policy is not present.  </exception>
	  Function id_to_servant(ByVal oid As SByte()) As org.omg.PortableServer.Servant

	  ''' <summary>
	  ''' If an object with the specified Object Id value is 
	  ''' currently active, a reference encapsulating the 
	  ''' information used to activate the object is returned. 
	  ''' </summary>
	  ''' <param name="oid"> id of the object for which the
	  '''                 reference is returned. </param>
	  ''' <returns> the object reference 
	  ''' </returns>
	  ''' <exception cref="ObjectNotActive"> if the Object Id value 
	  '''             is not active in the POA. </exception>
	  ''' <exception cref="WrongPolicy"> if the RETAIN policy is not 
	  '''             present. </exception>
	  Function id_to_reference(ByVal oid As SByte()) As org.omg.CORBA.Object

	  ''' <summary>
	  ''' This returns the unique id of the POA in the process in which it 
	  ''' is created.  It is for use by portable interceptors.
	  ''' <p>
	  ''' This id is guaranteed unique for the life span of the POA in the
	  ''' process.  For persistent POAs, this means that if a POA is created 
	  ''' in the same path with the same name as another POA, these POAs 
	  ''' are identical and, therefore, have the same id.  For transient 
	  ''' POAs, each POA is unique.
	  ''' </summary>
	  Function id() As SByte()
	End Interface ' interface POAOperations

End Namespace