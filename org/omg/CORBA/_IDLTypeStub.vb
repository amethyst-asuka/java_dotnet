'
' * Copyright (c) 1999, 2001, Oracle and/or its affiliates. All rights reserved.
' * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' 
Namespace org.omg.CORBA


	''' <summary>
	''' The Stub for <tt>IDLType</tt>.  For more information on
	''' Stub files, see <a href="doc-files/generatedfiles.html#stub">
	''' "Generated Files: Stubs"</a>.<P>
	''' org/omg/CORBA/_IDLTypeStub.java
	''' Generated by the IDL-to-Java compiler (portable), version "3.0"
	''' from ir.idl.
	''' 03 June 1999 11:33:44 o'clock GMT+00:00
	''' </summary>

	Public Class _IDLTypeStub
		Inherits org.omg.CORBA.portable.ObjectImpl
		Implements org.omg.CORBA.IDLType

	  ''' <summary>
	  ''' Constructs a default <code>_IDLTypeStub</code> object.
	  ''' NOTE:  If the default constructor is used, the
	  '''        object is useless until the method <code>_set_delegate</code>
	  '''        has been called.
	  ''' </summary>
	  ' NOTE: This constructor is not required according to the spec. Only JCK expects it now.
	  Public Sub New()
		MyBase.New()
	  End Sub

	  ''' <summary>
	  ''' Constructs an <code>_IDLTypeStub</code> object initialized
	  ''' with the given <code>Delegate</code> object.
	  ''' </summary>
	  ''' <param name="delegate"> a Delegate object </param>
	  ' NOTE: This constructor is not required according to the spec. We keep it as a convenience method.
	  Public Sub New(ByVal [delegate] As org.omg.CORBA.portable.Delegate)
		MyBase.New()
		_set_delegate([delegate])
	  End Sub

	  Public Overridable Function type() As org.omg.CORBA.TypeCode
		Dim _in As org.omg.CORBA.portable.InputStream = Nothing
		Try
		   Dim _out As org.omg.CORBA.portable.OutputStream = _request("_get_type", True)
		   _in = _invoke(_out)
		   Dim __result As org.omg.CORBA.TypeCode = _in.read_TypeCode()
		   Return __result
		Catch _ex As org.omg.CORBA.portable.ApplicationException
		   _in = _ex.inputStream
		   Dim _id As String = _ex.id
		   Throw New org.omg.CORBA.MARSHAL(_id)
		Catch _rm As org.omg.CORBA.portable.RemarshalException
		   Return type()
		Finally
			_releaseReply(_in)
		End Try
	  End Function ' type


	  ' read interface
	  Public Overridable Function def_kind() As org.omg.CORBA.DefinitionKind
		Dim _in As org.omg.CORBA.portable.InputStream = Nothing
		Try
		   Dim _out As org.omg.CORBA.portable.OutputStream = _request("_get_def_kind", True)
		   _in = _invoke(_out)
		   Dim __result As org.omg.CORBA.DefinitionKind = org.omg.CORBA.DefinitionKindHelper.read(_in)
		   Return __result
		Catch _ex As org.omg.CORBA.portable.ApplicationException
		   _in = _ex.inputStream
		   Dim _id As String = _ex.id
		   Throw New org.omg.CORBA.MARSHAL(_id)
		Catch _rm As org.omg.CORBA.portable.RemarshalException
		   Return def_kind()
		Finally
			_releaseReply(_in)
		End Try
	  End Function ' def_kind


	  ' write interface
	  Public Overridable Sub destroy()
		Dim _in As org.omg.CORBA.portable.InputStream = Nothing
		Try
		   Dim _out As org.omg.CORBA.portable.OutputStream = _request("destroy", True)
		   _in = _invoke(_out)
		Catch _ex As org.omg.CORBA.portable.ApplicationException
		   _in = _ex.inputStream
		   Dim _id As String = _ex.id
		   Throw New org.omg.CORBA.MARSHAL(_id)
		Catch _rm As org.omg.CORBA.portable.RemarshalException
		   destroy()
		Finally
			_releaseReply(_in)
		End Try
	  End Sub ' destroy

	  ' Type-specific CORBA::Object operations
	  Private Shared __ids As String() = { "IDL:omg.org/CORBA/IDLType:1.0", "IDL:omg.org/CORBA/IRObject:1.0"}

	  Public Overrides Function _ids() As String()
		Return CType(__ids.clone(), String())
	  End Function

	  Private Sub readObject(ByVal s As java.io.ObjectInputStream)
		 Try
		   Dim str As String = s.readUTF()
		   Dim obj As org.omg.CORBA.Object = org.omg.CORBA.ORB.init().string_to_object(str)
		   Dim [delegate] As org.omg.CORBA.portable.Delegate = CType(obj, org.omg.CORBA.portable.ObjectImpl)._get_delegate()
		   _set_delegate([delegate])
		 Catch e As java.io.IOException
		 End Try
	  End Sub

	  Private Sub writeObject(ByVal s As java.io.ObjectOutputStream)
		 Try
		   Dim str As String = org.omg.CORBA.ORB.init().object_to_string(Me)
		   s.writeUTF(str)
		 Catch e As java.io.IOException
		 End Try
	  End Sub
	End Class ' class _IDLTypeStub

End Namespace