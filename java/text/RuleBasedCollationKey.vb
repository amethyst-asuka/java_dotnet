'
' * Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
' * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' 

'
' * (C) Copyright Taligent, Inc. 1996 - All Rights Reserved
' * (C) Copyright IBM Corp. 1996 - All Rights Reserved
' *
' *   The original version of this source code and documentation is copyrighted
' * and owned by Taligent, Inc., a wholly-owned subsidiary of IBM. These
' * materials are provided under terms of a License Agreement between Taligent
' * and Sun. This technology is protected by multiple US and International
' * patents. This notice and attribution to Taligent may not be removed.
' *   Taligent is a registered trademark of Taligent, Inc.
' *
' 

Namespace java.text

	''' <summary>
	''' A RuleBasedCollationKey is a concrete implementation of CollationKey class.
	''' The RuleBasedCollationKey class is used by the RuleBasedCollator class.
	''' </summary>

	Friend NotInheritable Class RuleBasedCollationKey
		Inherits CollationKey

		''' <summary>
		''' Compare this RuleBasedCollationKey to target. The collation rules of the
		''' Collator object which created these keys are applied. <strong>Note:</strong>
		''' RuleBasedCollationKeys created by different Collators can not be compared. </summary>
		''' <param name="target"> target RuleBasedCollationKey </param>
		''' <returns> Returns an integer value. Value is less than zero if this is less
		''' than target, value is zero if this and target are equal and value is greater than
		''' zero if this is greater than target. </returns>
		''' <seealso cref= java.text.Collator#compare </seealso>
		Public Overrides Function compareTo(  target As CollationKey) As Integer
			Dim result As Integer = key.CompareTo(CType(target, RuleBasedCollationKey).key)
			If result <= Collator.LESS Then
				Return Collator.LESS
			ElseIf result >= Collator.GREATER Then
				Return Collator.GREATER
			End If
			Return Collator.EQUAL
		End Function

		''' <summary>
		''' Compare this RuleBasedCollationKey and the target for equality.
		''' The collation rules of the Collator object which created these keys are applied.
		''' <strong>Note:</strong> RuleBasedCollationKeys created by different Collators can not be
		''' compared. </summary>
		''' <param name="target"> the RuleBasedCollationKey to compare to. </param>
		''' <returns> Returns true if two objects are equal, false otherwise. </returns>
		Public Overrides Function Equals(  target As Object) As Boolean
			If Me Is target Then Return True
			If target Is Nothing OrElse (Not Me.GetType().Equals(target.GetType())) Then Return False
			Dim other As RuleBasedCollationKey = CType(target, RuleBasedCollationKey)
			Return key.Equals(other.key)
		End Function

		''' <summary>
		''' Creates a hash code for this RuleBasedCollationKey. The hash value is calculated on the
		''' key itself, not the String from which the key was created.  Thus
		''' if x and y are RuleBasedCollationKeys, then x.hashCode(x) == y.hashCode() if
		''' x.equals(y) is true.  This allows language-sensitive comparison in a hash table.
		''' See the CollatinKey class description for an example. </summary>
		''' <returns> the hash value based on the string's collation order. </returns>
		Public Overrides Function GetHashCode() As Integer
			Return (key.GetHashCode())
		End Function

		''' <summary>
		''' Converts the RuleBasedCollationKey to a sequence of bits. If two RuleBasedCollationKeys
		''' could be legitimately compared, then one could compare the byte arrays
		''' for each of those keys to obtain the same result.  Byte arrays are
		''' organized most significant byte first.
		''' </summary>
		Public Overrides Function toByteArray() As SByte()

			Dim src As Char() = key.ToCharArray()
			Dim dest As SByte() = New SByte(2*src.Length - 1){}
			Dim j As Integer = 0
			For i As Integer = 0 To src.Length - 1
				dest(j) = CByte(CInt(CUInt(src(i)) >> 8))
				j += 1
				dest(j) = CByte(AscW(src(i)) And &Hff)
				j += 1
			Next i
			Return dest
		End Function

		''' <summary>
		''' A RuleBasedCollationKey can only be generated by Collator objects.
		''' </summary>
		Friend Sub New(  source As String,   key As String)
			MyBase.New(source)
			Me.key = key
		End Sub
		Private key As String = Nothing

	End Class

End Namespace