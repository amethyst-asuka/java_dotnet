Imports Microsoft.VisualBasic
Imports System

' Stub class generated by rmic, do not edit.
' Contents subject to change without notice.

Namespace javax.management.remote.rmi

	Public NotInheritable Class RMIConnectionImpl_Stub
		Inherits java.rmi.server.RemoteStub
		Implements javax.management.remote.rmi.RMIConnection

		Private Const serialVersionUID As Long = 2

		Private Shared $method_addNotificationListener_0 As System.Reflection.MethodInfo
		Private Shared $method_addNotificationListeners_1 As System.Reflection.MethodInfo
		Private Shared $method_close_2 As System.Reflection.MethodInfo
		Private Shared $method_createMBean_3 As System.Reflection.MethodInfo
		Private Shared $method_createMBean_4 As System.Reflection.MethodInfo
		Private Shared $method_createMBean_5 As System.Reflection.MethodInfo
		Private Shared $method_createMBean_6 As System.Reflection.MethodInfo
		Private Shared $method_fetchNotifications_7 As System.Reflection.MethodInfo
		Private Shared $method_getAttribute_8 As System.Reflection.MethodInfo
		Private Shared $method_getAttributes_9 As System.Reflection.MethodInfo
		Private Shared $method_getConnectionId_10 As System.Reflection.MethodInfo
		Private Shared $method_getDefaultDomain_11 As System.Reflection.MethodInfo
		Private Shared $method_getDomains_12 As System.Reflection.MethodInfo
		Private Shared $method_getMBeanCount_13 As System.Reflection.MethodInfo
		Private Shared $method_getMBeanInfo_14 As System.Reflection.MethodInfo
		Private Shared $method_getObjectInstance_15 As System.Reflection.MethodInfo
		Private Shared $method_invoke_16 As System.Reflection.MethodInfo
		Private Shared $method_isInstanceOf_17 As System.Reflection.MethodInfo
		Private Shared $method_isRegistered_18 As System.Reflection.MethodInfo
		Private Shared $method_queryMBeans_19 As System.Reflection.MethodInfo
		Private Shared $method_queryNames_20 As System.Reflection.MethodInfo
		Private Shared $method_removeNotificationListener_21 As System.Reflection.MethodInfo
		Private Shared $method_removeNotificationListener_22 As System.Reflection.MethodInfo
		Private Shared $method_removeNotificationListeners_23 As System.Reflection.MethodInfo
		Private Shared $method_setAttribute_24 As System.Reflection.MethodInfo
		Private Shared $method_setAttributes_25 As System.Reflection.MethodInfo
		Private Shared $method_unregisterMBean_26 As System.Reflection.MethodInfo

		Shared Sub New()
		Try
			$method_addNotificationListener_0 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("addNotificationListener", New Type() {GetType(javax.management.ObjectName), GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(java.rmi.MarshalledObject), GetType(javax.security.auth.Subject)})
			$method_addNotificationListeners_1 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("addNotificationListeners", New Type() {GetType(javax.management.ObjectName()), GetType(java.rmi.MarshalledObject()), GetType(javax.security.auth.Subject())})
			$method_close_2 = GetType(java.lang.AutoCloseable).getMethod("close", New Type() {})
			$method_createMBean_3 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("createMBean", New Type() {GetType(String), GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(String()), GetType(javax.security.auth.Subject)})
			$method_createMBean_4 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("createMBean", New Type() {GetType(String), GetType(javax.management.ObjectName), GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(String()), GetType(javax.security.auth.Subject)})
			$method_createMBean_5 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("createMBean", New Type() {GetType(String), GetType(javax.management.ObjectName), GetType(javax.management.ObjectName), GetType(javax.security.auth.Subject)})
			$method_createMBean_6 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("createMBean", New Type() {GetType(String), GetType(javax.management.ObjectName), GetType(javax.security.auth.Subject)})
			$method_fetchNotifications_7 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("fetchNotifications", New Type() {GetType(Long), GetType(Integer), GetType(Long)})
			$method_getAttribute_8 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getAttribute", New Type() {GetType(javax.management.ObjectName), GetType(String), GetType(javax.security.auth.Subject)})
			$method_getAttributes_9 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getAttributes", New Type() {GetType(javax.management.ObjectName), GetType(String()), GetType(javax.security.auth.Subject)})
			$method_getConnectionId_10 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getConnectionId", New Type() {})
			$method_getDefaultDomain_11 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getDefaultDomain", New Type() {GetType(javax.security.auth.Subject)})
			$method_getDomains_12 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getDomains", New Type() {GetType(javax.security.auth.Subject)})
			$method_getMBeanCount_13 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getMBeanCount", New Type() {GetType(javax.security.auth.Subject)})
			$method_getMBeanInfo_14 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getMBeanInfo", New Type() {GetType(javax.management.ObjectName), GetType(javax.security.auth.Subject)})
			$method_getObjectInstance_15 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("getObjectInstance", New Type() {GetType(javax.management.ObjectName), GetType(javax.security.auth.Subject)})
			$method_invoke_16 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("invoke", New Type() {GetType(javax.management.ObjectName), GetType(String), GetType(java.rmi.MarshalledObject), GetType(String()), GetType(javax.security.auth.Subject)})
			$method_isInstanceOf_17 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("isInstanceOf", New Type() {GetType(javax.management.ObjectName), GetType(String), GetType(javax.security.auth.Subject)})
			$method_isRegistered_18 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("isRegistered", New Type() {GetType(javax.management.ObjectName), GetType(javax.security.auth.Subject)})
			$method_queryMBeans_19 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("queryMBeans", New Type() {GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(javax.security.auth.Subject)})
			$method_queryNames_20 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("queryNames", New Type() {GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(javax.security.auth.Subject)})
			$method_removeNotificationListener_21 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("removeNotificationListener", New Type() {GetType(javax.management.ObjectName), GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(java.rmi.MarshalledObject), GetType(javax.security.auth.Subject)})
			$method_removeNotificationListener_22 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("removeNotificationListener", New Type() {GetType(javax.management.ObjectName), GetType(javax.management.ObjectName), GetType(javax.security.auth.Subject)})
			$method_removeNotificationListeners_23 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("removeNotificationListeners", New Type() {GetType(javax.management.ObjectName), GetType(Integer?()), GetType(javax.security.auth.Subject)})
			$method_setAttribute_24 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("setAttribute", New Type() {GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(javax.security.auth.Subject)})
			$method_setAttributes_25 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("setAttributes", New Type() {GetType(javax.management.ObjectName), GetType(java.rmi.MarshalledObject), GetType(javax.security.auth.Subject)})
			$method_unregisterMBean_26 = GetType(javax.management.remote.rmi.RMIConnection).getMethod("unregisterMBean", New Type() {GetType(javax.management.ObjectName), GetType(javax.security.auth.Subject)})
		Catch e As java.lang.NoSuchMethodException
			Throw New System.MissingMethodException("stub class initialization failed")
		End Try
		End Sub

		' constructors
		Public Sub New(ByVal ref As java.rmi.server.RemoteRef)
		MyBase.New(ref)
		End Sub

		' methods from remote interfaces

		' implementation of addNotificationListener(ObjectName, ObjectName, MarshalledObject, MarshalledObject, Subject)
		Public Sub addNotificationListener(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_ObjectName_2 As javax.management.ObjectName, ByVal $param_MarshalledObject_3 As java.rmi.MarshalledObject, ByVal $param_MarshalledObject_4 As java.rmi.MarshalledObject, ByVal $param_Subject_5 As javax.security.auth.Subject)
		Try
			ref.invoke(Me, $method_addNotificationListener_0, New Object() {$param_ObjectName_1, $param_ObjectName_2, $param_MarshalledObject_3, $param_MarshalledObject_4, $param_Subject_5}, -8578317696269497109L)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Sub

		' implementation of addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])
		Public Function addNotificationListeners(ByVal $param_arrayOf_ObjectName_1 As javax.management.ObjectName(), ByVal $param_arrayOf_MarshalledObject_2 As java.rmi.MarshalledObject(), ByVal $param_arrayOf_Subject_3 As javax.security.auth.Subject()) As Integer?()
		Try
			Dim $result As Object = ref.invoke(Me, $method_addNotificationListeners_1, New Object() {$param_arrayOf_ObjectName_1, $param_arrayOf_MarshalledObject_2, $param_arrayOf_Subject_3}, -5321691879380783377L)
			Return (CType($result, Integer?()))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of close()
		Public Sub close()
		Try
			ref.invoke(Me, $method_close_2, Nothing, -4742752445160157748L)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Sub

		' implementation of createMBean(String, ObjectName, MarshalledObject, String[], Subject)
		Public Function createMBean(ByVal $param_String_1 As String, ByVal $param_ObjectName_2 As javax.management.ObjectName, ByVal $param_MarshalledObject_3 As java.rmi.MarshalledObject, ByVal $param_arrayOf_String_4 As String(), ByVal $param_Subject_5 As javax.security.auth.Subject) As javax.management.ObjectInstance
		Try
			Dim $result As Object = ref.invoke(Me, $method_createMBean_3, New Object() {$param_String_1, $param_ObjectName_2, $param_MarshalledObject_3, $param_arrayOf_String_4, $param_Subject_5}, 4867822117947806114L)
			Return (CType($result, javax.management.ObjectInstance))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceAlreadyExistsException
			Throw e
		Catch e As javax.management.MBeanException
			Throw e
		Catch e As javax.management.NotCompliantMBeanException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of createMBean(String, ObjectName, ObjectName, MarshalledObject, String[], Subject)
		Public Function createMBean(ByVal $param_String_1 As String, ByVal $param_ObjectName_2 As javax.management.ObjectName, ByVal $param_ObjectName_3 As javax.management.ObjectName, ByVal $param_MarshalledObject_4 As java.rmi.MarshalledObject, ByVal $param_arrayOf_String_5 As String(), ByVal $param_Subject_6 As javax.security.auth.Subject) As javax.management.ObjectInstance
		Try
			Dim $result As Object = ref.invoke(Me, $method_createMBean_4, New Object() {$param_String_1, $param_ObjectName_2, $param_ObjectName_3, $param_MarshalledObject_4, $param_arrayOf_String_5, $param_Subject_6}, -6604955182088909937L)
			Return (CType($result, javax.management.ObjectInstance))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceAlreadyExistsException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.MBeanException
			Throw e
		Catch e As javax.management.NotCompliantMBeanException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of createMBean(String, ObjectName, ObjectName, Subject)
		Public Function createMBean(ByVal $param_String_1 As String, ByVal $param_ObjectName_2 As javax.management.ObjectName, ByVal $param_ObjectName_3 As javax.management.ObjectName, ByVal $param_Subject_4 As javax.security.auth.Subject) As javax.management.ObjectInstance
		Try
			Dim $result As Object = ref.invoke(Me, $method_createMBean_5, New Object() {$param_String_1, $param_ObjectName_2, $param_ObjectName_3, $param_Subject_4}, -8679469989872508324L)
			Return (CType($result, javax.management.ObjectInstance))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceAlreadyExistsException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.MBeanException
			Throw e
		Catch e As javax.management.NotCompliantMBeanException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of createMBean(String, ObjectName, Subject)
		Public Function createMBean(ByVal $param_String_1 As String, ByVal $param_ObjectName_2 As javax.management.ObjectName, ByVal $param_Subject_3 As javax.security.auth.Subject) As javax.management.ObjectInstance
		Try
			Dim $result As Object = ref.invoke(Me, $method_createMBean_6, New Object() {$param_String_1, $param_ObjectName_2, $param_Subject_3}, 2510753813974665446L)
			Return (CType($result, javax.management.ObjectInstance))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceAlreadyExistsException
			Throw e
		Catch e As javax.management.MBeanException
			Throw e
		Catch e As javax.management.NotCompliantMBeanException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of fetchNotifications(long, int, long)
		Public Function fetchNotifications(ByVal $param_long_1 As Long, ByVal $param_int_2 As Integer, ByVal $param_long_3 As Long) As javax.management.remote.NotificationResult
		Try
			Dim $result As Object = ref.invoke(Me, $method_fetchNotifications_7, New Object() {New Long?($param_long_1), New Integer?($param_int_2), New Long?($param_long_3)}, -5037523307973544478L)
			Return (CType($result, javax.management.remote.NotificationResult))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of getAttribute(ObjectName, String, Subject)
		Public Function getAttribute(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_String_2 As String, ByVal $param_Subject_3 As javax.security.auth.Subject) As Object
		Try
			Dim $result As Object = ref.invoke(Me, $method_getAttribute_8, New Object() {$param_ObjectName_1, $param_String_2, $param_Subject_3}, -1089783104982388203L)
			Return (CObj($result))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.AttributeNotFoundException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.MBeanException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of getAttributes(ObjectName, String[], Subject)
		Public Function getAttributes(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_arrayOf_String_2 As String(), ByVal $param_Subject_3 As javax.security.auth.Subject) As javax.management.AttributeList
		Try
			Dim $result As Object = ref.invoke(Me, $method_getAttributes_9, New Object() {$param_ObjectName_1, $param_arrayOf_String_2, $param_Subject_3}, 6285293806596348999L)
			Return (CType($result, javax.management.AttributeList))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of getConnectionId()
		Public Property connectionId As String
			Get
			Try
				Dim $result As Object = ref.invoke(Me, $method_getConnectionId_10, Nothing, -67907180346059933L)
				Return (CStr($result))
			Catch e As Exception
				Throw e
			Catch e As java.io.IOException
				Throw e
			Catch e As Exception
				Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
			End Try
			End Get
		End Property

		' implementation of getDefaultDomain(Subject)
		Public Function getDefaultDomain(ByVal $param_Subject_1 As javax.security.auth.Subject) As String
		Try
			Dim $result As Object = ref.invoke(Me, $method_getDefaultDomain_11, New Object() {$param_Subject_1}, 6047668923998658472L)
			Return (CStr($result))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of getDomains(Subject)
		Public Function getDomains(ByVal $param_Subject_1 As javax.security.auth.Subject) As String()
		Try
			Dim $result As Object = ref.invoke(Me, $method_getDomains_12, New Object() {$param_Subject_1}, -6662314179953625551L)
			Return (CType($result, String()))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of getMBeanCount(Subject)
		Public Function getMBeanCount(ByVal $param_Subject_1 As javax.security.auth.Subject) As Integer?
		Try
			Dim $result As Object = ref.invoke(Me, $method_getMBeanCount_13, New Object() {$param_Subject_1}, -2042362057335820635L)
			Return (CInt(Fix($result)))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of getMBeanInfo(ObjectName, Subject)
		Public Function getMBeanInfo(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_Subject_2 As javax.security.auth.Subject) As javax.management.MBeanInfo
		Try
			Dim $result As Object = ref.invoke(Me, $method_getMBeanInfo_14, New Object() {$param_ObjectName_1, $param_Subject_2}, -7404813916326233354L)
			Return (CType($result, javax.management.MBeanInfo))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.IntrospectionException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of getObjectInstance(ObjectName, Subject)
		Public Function getObjectInstance(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_Subject_2 As javax.security.auth.Subject) As javax.management.ObjectInstance
		Try
			Dim $result As Object = ref.invoke(Me, $method_getObjectInstance_15, New Object() {$param_ObjectName_1, $param_Subject_2}, 6950095694996159938L)
			Return (CType($result, javax.management.ObjectInstance))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of invoke(ObjectName, String, MarshalledObject, String[], Subject)
		Public Function invoke(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_String_2 As String, ByVal $param_MarshalledObject_3 As java.rmi.MarshalledObject, ByVal $param_arrayOf_String_4 As String(), ByVal $param_Subject_5 As javax.security.auth.Subject) As Object
		Try
			Dim $result As Object = ref.invoke(Me, $method_invoke_16, New Object() {$param_ObjectName_1, $param_String_2, $param_MarshalledObject_3, $param_arrayOf_String_4, $param_Subject_5}, 1434350937885235744L)
			Return (CObj($result))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.MBeanException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of isInstanceOf(ObjectName, String, Subject)
		Public Function isInstanceOf(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_String_2 As String, ByVal $param_Subject_3 As javax.security.auth.Subject) As Boolean
		Try
			Dim $result As Object = ref.invoke(Me, $method_isInstanceOf_17, New Object() {$param_ObjectName_1, $param_String_2, $param_Subject_3}, -2147516868461740814L)
			Return CBool($result)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of isRegistered(ObjectName, Subject)
		Public Function isRegistered(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_Subject_2 As javax.security.auth.Subject) As Boolean
		Try
			Dim $result As Object = ref.invoke(Me, $method_isRegistered_18, New Object() {$param_ObjectName_1, $param_Subject_2}, 8325683335228268564L)
			Return CBool($result)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of queryMBeans(ObjectName, MarshalledObject, Subject)
		Public Function queryMBeans(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_MarshalledObject_2 As java.rmi.MarshalledObject, ByVal $param_Subject_3 As javax.security.auth.Subject) As java.util.Set
		Try
			Dim $result As Object = ref.invoke(Me, $method_queryMBeans_19, New Object() {$param_ObjectName_1, $param_MarshalledObject_2, $param_Subject_3}, 2915881009400597976L)
			Return (CType($result, java.util.Set))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of queryNames(ObjectName, MarshalledObject, Subject)
		Public Function queryNames(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_MarshalledObject_2 As java.rmi.MarshalledObject, ByVal $param_Subject_3 As javax.security.auth.Subject) As java.util.Set
		Try
			Dim $result As Object = ref.invoke(Me, $method_queryNames_20, New Object() {$param_ObjectName_1, $param_MarshalledObject_2, $param_Subject_3}, 9152567528369059802L)
			Return (CType($result, java.util.Set))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of removeNotificationListener(ObjectName, ObjectName, MarshalledObject, MarshalledObject, Subject)
		Public Sub removeNotificationListener(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_ObjectName_2 As javax.management.ObjectName, ByVal $param_MarshalledObject_3 As java.rmi.MarshalledObject, ByVal $param_MarshalledObject_4 As java.rmi.MarshalledObject, ByVal $param_Subject_5 As javax.security.auth.Subject)
		Try
			ref.invoke(Me, $method_removeNotificationListener_21, New Object() {$param_ObjectName_1, $param_ObjectName_2, $param_MarshalledObject_3, $param_MarshalledObject_4, $param_Subject_5}, 2578029900065214857L)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.ListenerNotFoundException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Sub

		' implementation of removeNotificationListener(ObjectName, ObjectName, Subject)
		Public Sub removeNotificationListener(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_ObjectName_2 As javax.management.ObjectName, ByVal $param_Subject_3 As javax.security.auth.Subject)
		Try
			ref.invoke(Me, $method_removeNotificationListener_22, New Object() {$param_ObjectName_1, $param_ObjectName_2, $param_Subject_3}, 6604721169198089513L)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.ListenerNotFoundException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Sub

		' implementation of removeNotificationListeners(ObjectName, Integer[], Subject)
		Public Sub removeNotificationListeners(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_arrayOf_Integer_2 As Integer?(), ByVal $param_Subject_3 As javax.security.auth.Subject)
		Try
			ref.invoke(Me, $method_removeNotificationListeners_23, New Object() {$param_ObjectName_1, $param_arrayOf_Integer_2, $param_Subject_3}, 2549120024456183446L)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.ListenerNotFoundException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Sub

		' implementation of setAttribute(ObjectName, MarshalledObject, Subject)
		Public Sub setAttribute(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_MarshalledObject_2 As java.rmi.MarshalledObject, ByVal $param_Subject_3 As javax.security.auth.Subject)
		Try
			ref.invoke(Me, $method_setAttribute_24, New Object() {$param_ObjectName_1, $param_MarshalledObject_2, $param_Subject_3}, 6738606893952597516L)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.AttributeNotFoundException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.InvalidAttributeValueException
			Throw e
		Catch e As javax.management.MBeanException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Sub

		' implementation of setAttributes(ObjectName, MarshalledObject, Subject)
		Public Function setAttributes(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_MarshalledObject_2 As java.rmi.MarshalledObject, ByVal $param_Subject_3 As javax.security.auth.Subject) As javax.management.AttributeList
		Try
			Dim $result As Object = ref.invoke(Me, $method_setAttributes_25, New Object() {$param_ObjectName_1, $param_MarshalledObject_2, $param_Subject_3}, -230470228399681820L)
			Return (CType($result, javax.management.AttributeList))
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.ReflectionException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Function

		' implementation of unregisterMBean(ObjectName, Subject)
		Public Sub unregisterMBean(ByVal $param_ObjectName_1 As javax.management.ObjectName, ByVal $param_Subject_2 As javax.security.auth.Subject)
		Try
			ref.invoke(Me, $method_unregisterMBean_26, New Object() {$param_ObjectName_1, $param_Subject_2}, -159498580868721452L)
		Catch e As Exception
			Throw e
		Catch e As java.io.IOException
			Throw e
		Catch e As javax.management.InstanceNotFoundException
			Throw e
		Catch e As javax.management.MBeanRegistrationException
			Throw e
		Catch e As Exception
			Throw New java.rmi.UnexpectedException("undeclared checked exception", e)
		End Try
		End Sub
	End Class

End Namespace